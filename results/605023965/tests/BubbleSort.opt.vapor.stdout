const empty_BBS

func Main[in 0, out 2, local 2]
$t0 = HeapAllocZ(8)
local[0] = $t0
$t0 = local[0]
if $t0 goto :null1
Error("null pointer")
null1: 
$t0 = local[0]
out[0] = $t0
$t0 = 10
out[1] = $t0
$t1 = :BBS.Start
call $t1
local[1] = $v0
$t1 = local[1]
PrintIntS($t1)
ret

func BBS.Start[in 2, out 2, local 1]
$t0 = in[0]
out[0] = $t0
$t0 = in[1]
out[1] = $t0
$t1 = :BBS.Init
call $t1
local[0] = $v0
$t0 = in[0]
out[0] = $t0
$t1 = :BBS.Print
call $t1
local[0] = $v0
PrintIntS(99999)
$t0 = in[0]
out[0] = $t0
$t1 = :BBS.Sort
call $t1
local[0] = $v0
$t0 = in[0]
out[0] = $t0
$t1 = :BBS.Print
call $t1
local[0] = $v0
$v0 = 0
ret

func BBS.Sort[in 1, out 0, local 27]
$t0 = in[0]
$t1 = [$t0+4]
local[0] = $t1
$t1 = local[0]
$t0 = Sub($t1 1)
local[1] = $t0
$t0 = Sub(0 1)
local[2] = $t0
while1_top: 
$t1 = local[2]
$t2 = local[1]
$t0 = LtS($t1 $t2)
local[3] = $t0
$t0 = local[3]
if0 $t0 goto :while1_end
$t0 = 1
local[4] = $t0
while2_top: 
$t1 = local[1]
$t0 = Add($t1 1)
local[5] = $t0
$t1 = local[4]
$t2 = local[5]
$t0 = LtS($t1 $t2)
local[6] = $t0
$t0 = local[6]
if0 $t0 goto :while2_end
$t1 = local[4]
$t0 = Sub($t1 1)
local[7] = $t0
$t0 = in[0]
$t1 = [$t0]
local[8] = $t1
$t0 = local[8]
if $t0 goto :null2
Error("null pointer")
null2: 
$t0 = local[8]
$t1 = [$t0]
local[9] = $t1
$t1 = local[7]
$t2 = local[9]
$t0 = Lt($t1 $t2)
local[9] = $t0
$t0 = local[9]
if $t0 goto :bounds1
Error("array index out of bounds")
bounds1: 
$t1 = local[7]
$t0 = MulS($t1 4)
local[9] = $t0
$t1 = local[9]
$t2 = local[8]
$t0 = Add($t1 $t2)
local[9] = $t0
$t0 = local[9]
$t1 = [$t0+4]
local[10] = $t1
$t0 = in[0]
$t1 = [$t0]
local[11] = $t1
$t0 = local[11]
if $t0 goto :null3
Error("null pointer")
null3: 
$t0 = local[11]
$t1 = [$t0]
local[12] = $t1
$t1 = local[4]
$t2 = local[12]
$t0 = Lt($t1 $t2)
local[12] = $t0
$t0 = local[12]
if $t0 goto :bounds2
Error("array index out of bounds")
bounds2: 
$t1 = local[4]
$t0 = MulS($t1 4)
local[12] = $t0
$t1 = local[12]
$t2 = local[11]
$t0 = Add($t1 $t2)
local[12] = $t0
$t0 = local[12]
$t1 = [$t0+4]
local[13] = $t1
$t1 = local[13]
$t2 = local[10]
$t0 = LtS($t1 $t2)
local[14] = $t0
$t0 = local[14]
if0 $t0 goto :if1_else
$t1 = local[4]
$t0 = Sub($t1 1)
local[15] = $t0
$t0 = in[0]
$t1 = [$t0]
local[16] = $t1
$t0 = local[16]
if $t0 goto :null4
Error("null pointer")
null4: 
$t0 = local[16]
$t1 = [$t0]
local[17] = $t1
$t1 = local[15]
$t2 = local[17]
$t0 = Lt($t1 $t2)
local[17] = $t0
$t0 = local[17]
if $t0 goto :bounds3
Error("array index out of bounds")
bounds3: 
$t1 = local[15]
$t0 = MulS($t1 4)
local[17] = $t0
$t1 = local[17]
$t2 = local[16]
$t0 = Add($t1 $t2)
local[17] = $t0
$t0 = local[17]
$t1 = [$t0+4]
local[18] = $t1
$t0 = in[0]
$t1 = [$t0]
local[19] = $t1
$t0 = local[19]
if $t0 goto :null5
Error("null pointer")
null5: 
$t0 = local[19]
$t1 = [$t0]
local[20] = $t1
$t1 = local[15]
$t2 = local[20]
$t0 = Lt($t1 $t2)
local[20] = $t0
$t0 = local[20]
if $t0 goto :bounds4
Error("array index out of bounds")
bounds4: 
$t1 = local[15]
$t0 = MulS($t1 4)
local[20] = $t0
$t1 = local[20]
$t2 = local[19]
$t0 = Add($t1 $t2)
local[20] = $t0
$t0 = in[0]
$t1 = [$t0]
local[21] = $t1
$t0 = local[21]
if $t0 goto :null6
Error("null pointer")
null6: 
$t0 = local[21]
$t1 = [$t0]
local[22] = $t1
$t1 = local[4]
$t2 = local[22]
$t0 = Lt($t1 $t2)
local[22] = $t0
$t0 = local[22]
if $t0 goto :bounds5
Error("array index out of bounds")
bounds5: 
$t1 = local[4]
$t0 = MulS($t1 4)
local[22] = $t0
$t1 = local[22]
$t2 = local[21]
$t0 = Add($t1 $t2)
local[22] = $t0
$t0 = local[22]
$t1 = [$t0+4]
local[23] = $t1
$t0 = local[20]
$t1 = local[23]
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[24] = $t1
$t0 = local[24]
if $t0 goto :null7
Error("null pointer")
null7: 
$t0 = local[24]
$t1 = [$t0]
local[25] = $t1
$t1 = local[4]
$t2 = local[25]
$t0 = Lt($t1 $t2)
local[25] = $t0
$t0 = local[25]
if $t0 goto :bounds6
Error("array index out of bounds")
bounds6: 
$t1 = local[4]
$t0 = MulS($t1 4)
local[25] = $t0
$t1 = local[25]
$t2 = local[24]
$t0 = Add($t1 $t2)
local[25] = $t0
$t0 = local[25]
$t1 = local[18]
[$t0+4] = $t1
goto :if1_end
if1_else: 
$t0 = 0
local[26] = $t0
if1_end: 
$t1 = local[4]
$t0 = Add($t1 1)
local[4] = $t0
goto :while2_top
while2_end: 
$t1 = local[1]
$t0 = Sub($t1 1)
local[1] = $t0
goto :while1_top
while1_end: 
$v0 = 0
ret

func BBS.Print[in 1, out 0, local 6]
$t0 = 0
local[0] = $t0
while3_top: 
$t0 = in[0]
$t1 = [$t0+4]
local[1] = $t1
$t1 = local[0]
$t2 = local[1]
$t0 = LtS($t1 $t2)
local[2] = $t0
$t0 = local[2]
if0 $t0 goto :while3_end
$t0 = in[0]
$t1 = [$t0]
local[3] = $t1
$t0 = local[3]
if $t0 goto :null8
Error("null pointer")
null8: 
$t0 = local[3]
$t1 = [$t0]
local[4] = $t1
$t1 = local[0]
$t2 = local[4]
$t0 = Lt($t1 $t2)
local[4] = $t0
$t0 = local[4]
if $t0 goto :bounds7
Error("array index out of bounds")
bounds7: 
$t1 = local[0]
$t0 = MulS($t1 4)
local[4] = $t0
$t1 = local[4]
$t2 = local[3]
$t0 = Add($t1 $t2)
local[4] = $t0
$t0 = local[4]
$t1 = [$t0+4]
local[5] = $t1
$t1 = local[5]
PrintIntS($t1)
$t1 = local[0]
$t0 = Add($t1 1)
local[0] = $t0
goto :while3_top
while3_end: 
$v0 = 0
ret

func BBS.Init[in 2, out 1, local 21]
$t0 = in[0]
$t1 = in[1]
[$t0+4] = $t1
$t0 = in[1]
out[0] = $t0
$t1 = :AllocArray
call $t1
local[0] = $v0
$t0 = in[0]
$t1 = local[0]
[$t0] = $t1
$t0 = in[0]
$t1 = [$t0]
local[1] = $t1
$t0 = local[1]
if $t0 goto :null9
Error("null pointer")
null9: 
$t0 = local[1]
$t1 = [$t0]
local[2] = $t1
$t1 = local[2]
$t0 = Lt(0 $t1)
local[2] = $t0
$t0 = local[2]
if $t0 goto :bounds8
Error("array index out of bounds")
bounds8: 
$t0 = MulS(0 4)
local[2] = $t0
$t1 = local[2]
$t2 = local[1]
$t0 = Add($t1 $t2)
local[2] = $t0
$t0 = local[2]
$t1 = 20
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[3] = $t1
$t0 = local[3]
if $t0 goto :null10
Error("null pointer")
null10: 
$t0 = local[3]
$t1 = [$t0]
local[4] = $t1
$t1 = local[4]
$t0 = Lt(1 $t1)
local[4] = $t0
$t0 = local[4]
if $t0 goto :bounds9
Error("array index out of bounds")
bounds9: 
$t0 = MulS(1 4)
local[4] = $t0
$t1 = local[4]
$t2 = local[3]
$t0 = Add($t1 $t2)
local[4] = $t0
$t0 = local[4]
$t1 = 7
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[5] = $t1
$t0 = local[5]
if $t0 goto :null11
Error("null pointer")
null11: 
$t0 = local[5]
$t1 = [$t0]
local[6] = $t1
$t1 = local[6]
$t0 = Lt(2 $t1)
local[6] = $t0
$t0 = local[6]
if $t0 goto :bounds10
Error("array index out of bounds")
bounds10: 
$t0 = MulS(2 4)
local[6] = $t0
$t1 = local[6]
$t2 = local[5]
$t0 = Add($t1 $t2)
local[6] = $t0
$t0 = local[6]
$t1 = 12
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[7] = $t1
$t0 = local[7]
if $t0 goto :null12
Error("null pointer")
null12: 
$t0 = local[7]
$t1 = [$t0]
local[8] = $t1
$t1 = local[8]
$t0 = Lt(3 $t1)
local[8] = $t0
$t0 = local[8]
if $t0 goto :bounds11
Error("array index out of bounds")
bounds11: 
$t0 = MulS(3 4)
local[8] = $t0
$t1 = local[8]
$t2 = local[7]
$t0 = Add($t1 $t2)
local[8] = $t0
$t0 = local[8]
$t1 = 18
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[9] = $t1
$t0 = local[9]
if $t0 goto :null13
Error("null pointer")
null13: 
$t0 = local[9]
$t1 = [$t0]
local[10] = $t1
$t1 = local[10]
$t0 = Lt(4 $t1)
local[10] = $t0
$t0 = local[10]
if $t0 goto :bounds12
Error("array index out of bounds")
bounds12: 
$t0 = MulS(4 4)
local[10] = $t0
$t1 = local[10]
$t2 = local[9]
$t0 = Add($t1 $t2)
local[10] = $t0
$t0 = local[10]
$t1 = 2
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[11] = $t1
$t0 = local[11]
if $t0 goto :null14
Error("null pointer")
null14: 
$t0 = local[11]
$t1 = [$t0]
local[12] = $t1
$t1 = local[12]
$t0 = Lt(5 $t1)
local[12] = $t0
$t0 = local[12]
if $t0 goto :bounds13
Error("array index out of bounds")
bounds13: 
$t0 = MulS(5 4)
local[12] = $t0
$t1 = local[12]
$t2 = local[11]
$t0 = Add($t1 $t2)
local[12] = $t0
$t0 = local[12]
$t1 = 11
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[13] = $t1
$t0 = local[13]
if $t0 goto :null15
Error("null pointer")
null15: 
$t0 = local[13]
$t1 = [$t0]
local[14] = $t1
$t1 = local[14]
$t0 = Lt(6 $t1)
local[14] = $t0
$t0 = local[14]
if $t0 goto :bounds14
Error("array index out of bounds")
bounds14: 
$t0 = MulS(6 4)
local[14] = $t0
$t1 = local[14]
$t2 = local[13]
$t0 = Add($t1 $t2)
local[14] = $t0
$t0 = local[14]
$t1 = 6
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[15] = $t1
$t0 = local[15]
if $t0 goto :null16
Error("null pointer")
null16: 
$t0 = local[15]
$t1 = [$t0]
local[16] = $t1
$t1 = local[16]
$t0 = Lt(7 $t1)
local[16] = $t0
$t0 = local[16]
if $t0 goto :bounds15
Error("array index out of bounds")
bounds15: 
$t0 = MulS(7 4)
local[16] = $t0
$t1 = local[16]
$t2 = local[15]
$t0 = Add($t1 $t2)
local[16] = $t0
$t0 = local[16]
$t1 = 9
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[17] = $t1
$t0 = local[17]
if $t0 goto :null17
Error("null pointer")
null17: 
$t0 = local[17]
$t1 = [$t0]
local[18] = $t1
$t1 = local[18]
$t0 = Lt(8 $t1)
local[18] = $t0
$t0 = local[18]
if $t0 goto :bounds16
Error("array index out of bounds")
bounds16: 
$t0 = MulS(8 4)
local[18] = $t0
$t1 = local[18]
$t2 = local[17]
$t0 = Add($t1 $t2)
local[18] = $t0
$t0 = local[18]
$t1 = 19
[$t0+4] = $t1
$t0 = in[0]
$t1 = [$t0]
local[19] = $t1
$t0 = local[19]
if $t0 goto :null18
Error("null pointer")
null18: 
$t0 = local[19]
$t1 = [$t0]
local[20] = $t1
$t1 = local[20]
$t0 = Lt(9 $t1)
local[20] = $t0
$t0 = local[20]
if $t0 goto :bounds17
Error("array index out of bounds")
bounds17: 
$t0 = MulS(9 4)
local[20] = $t0
$t1 = local[20]
$t2 = local[19]
$t0 = Add($t1 $t2)
local[20] = $t0
$t0 = local[20]
$t1 = 5
[$t0+4] = $t1
$v0 = 0
ret

func AllocArray[in 1, out 0, local 2]
$t1 = in[0]
$t0 = MulS($t1 4)
local[0] = $t0
$t1 = local[0]
$t0 = Add($t1 4)
local[0] = $t0
$t1 = local[0]
$t0 = HeapAllocZ($t1)
local[1] = $t0
$t0 = local[1]
$t1 = in[0]
[$t0] = $t1
$v0 = local[1]
ret

